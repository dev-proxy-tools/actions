name: Start Dev Proxy
description: Start Dev Proxy
inputs:
  log-file:
    description: The file to log Dev Proxy output to
    required: true
    default: devproxy.log
  config-file:
    description: The path to the Dev Proxy configuration file
    required: false
runs:
  using: composite
  steps:
    - name: Start Dev Proxy
      id: start
      run: |
        log_file="${{ inputs.log-file }}"

        echo "Starting Dev Proxy..."

        # Create directory for Dev Proxy configuration and certificates
        mkdir -p ~/.config/dev-proxy/rootCert

        # Set environment variables for Dev Proxy
        export DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1
        export XDG_DATA_HOME=~/.config
        export DEV_PROXY_CERT_PATH=rootCert/rootCert.pfx

        echo "cert-path=$DEV_PROXY_CERT_PATH" >> $GITHUB_OUTPUT

        # start Dev Proxy in the background
        # log Dev Proxy output to the log file
        # log stdout and stderr to the file
        config_arg=""
        if [ -n "${{ inputs.config-file }}" ]; then
          config_arg="-c ${{ inputs.config-file }}"
        fi
        
        ./devproxy/devproxy $config_arg > $log_file 2>&1 &

        proxy_pid=$!

        # wait for init
        echo "Waiting for Dev Proxy to start..."
        while true; do
          if grep -q "Configure your operating system to use this proxy's port and address 127.0.0.1:8000" $log_file; then
            break
          fi
          sleep 1
        done
      shell: bash
    - name: Trust certificate
      id: trust-certificate
      run: |
        echo "üîí Trusting Dev Proxy certificate..."
        
        # Use the cert-path from the start step output
        cert_path="$HOME/.config/dev-proxy/${{ steps.start.outputs.cert-path }}"

        echo "Checking for certificate at: $cert_path"
        if [ -f "$cert_path" ]; then
          echo "‚úÖ Certificate found"
          
          echo "Exporting the Dev Proxy's Root Certificate"
          if openssl pkcs12 -in "$cert_path" -clcerts -nokeys -out dev-proxy-ca.crt -passin pass:""; then
            echo "Installing the Dev Proxy's Root Certificate"
            sudo cp dev-proxy-ca.crt /usr/local/share/ca-certificates/

            echo "Updating the CA certificates"
            sudo update-ca-certificates
            
            # Set the system proxy settings
            echo "http_proxy=http://127.0.0.1:8000" >> $GITHUB_ENV
            echo "https_proxy=http://127.0.0.1:8000" >> $GITHUB_ENV
                  
            echo "‚úÖ Dev Proxy certificate trusted successfully!"
          else
            echo "‚ùå Failed to export certificate from $cert_path"
            echo "‚ö†Ô∏è SSL verification may fail"
          fi
        else
          echo "‚ùå Certificate not found at: $cert_path"
          echo "‚ö†Ô∏è Skipping certificate trust - SSL verification may fail"
        fi
      shell: bash
