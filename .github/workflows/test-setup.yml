name: Test Setup Action

on:
  workflow_dispatch:

jobs:
  test-setup-and-start:
    name: Test Setup with auto-start and auto-record
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Dev Proxy (install and start)
        id: setup-devproxy
        uses: ./setup
        with:
          version: v1.0.0
          auto-record: true

      - name: Verify Setup and Start
        run: |
          echo "üîç Verifying Dev Proxy setup and start..."
          
          # Check if Dev Proxy binary exists
          if [ -f "./devproxy/devproxy" ]; then
            echo "‚úÖ Dev Proxy binary found"
          else
            echo "‚ùå Dev Proxy binary not found"
            exit 1
          fi

          # Verify outputs are set
          if [ -n "${{ steps.setup-devproxy.outputs.proxy-url }}" ]; then
            echo "‚úÖ Proxy URL output: ${{ steps.setup-devproxy.outputs.proxy-url }}"
          else
            echo "‚ùå Proxy URL output not set"
            exit 1
          fi

          if [ -n "${{ steps.setup-devproxy.outputs.api-url }}" ]; then
            echo "‚úÖ API URL output: ${{ steps.setup-devproxy.outputs.api-url }}"
          else
            echo "‚ùå API URL output not set"
            exit 1
          fi

          # Check if Dev Proxy is running and recording
          response=$(curl -s --max-time 10 ${{ steps.setup-devproxy.outputs.api-url }})
          if [ $? -eq 0 ] && [ -n "$response" ]; then
            echo "‚úÖ Dev Proxy is running and responsive"
            echo "üìã API Response: $response"
            
            # Check if recording is enabled
            if echo "$response" | grep -q '"recording":true'; then
              echo "‚úÖ Dev Proxy is recording"
            else
              echo "‚ùå Dev Proxy is not recording"
              exit 1
            fi
          else
            echo "‚ùå Dev Proxy is not responsive"
            exit 1
          fi

      - name: Test Proxy Functionality
        run: |
          echo "üîç Testing proxy functionality..."
          curl -ikx "${{ steps.setup-devproxy.outputs.proxy-url }}" https://jsonplaceholder.typicode.com/posts

      - name: Show logs
        if: always()
        run: |
          echo "Dev Proxy logs:"
          cat devproxy.log
      